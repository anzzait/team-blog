{"version":3,"file":"component---src-pages-index-js-8faa006a2c3972ac149b.js","mappings":"mKA4CA,EAxCY,SAAH,GAAoD,IAA9CA,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAE3C,GAAiGC,EAAAA,EAAAA,KAAlFC,EAAY,EAAnBL,MAAkCM,EAAkB,EAA/BL,YAAiCM,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAE/DC,EAAM,CAEVT,MAAOA,EAAWA,EAAK,MAAMK,EAAiBA,EAC9CJ,YAAaA,GAAeK,EAC5BC,MAAUC,EAAO,IAAID,EACrBG,IAAI,GAAIF,GAAUN,GAAQ,IAC1BS,KAAK,GAR2E,EAAJA,KAS5EC,SAAS,GATiF,EAARA,UAYpF,OACE,gCACE,6BAAQH,EAAIT,OACZ,wBAAMa,UAAU,eAAeC,QAAQ,6BACvC,wBAAMC,KAAK,cAAcD,QAASL,EAAIR,cACtC,wBAAMc,KAAK,QAAQD,QAASL,EAAIF,QAChC,wBAAMQ,KAAK,WAAWD,QAASL,EAAIG,WAGnC,wBAAMI,SAAS,SAASF,QAASL,EAAIC,MACrC,wBAAMM,SAAS,UAAUF,QAASL,EAAIE,OACtC,wBAAMK,SAAS,WAAWF,QAASL,EAAIT,QACvC,wBAAMgB,SAAS,iBAAiBF,QAASL,EAAIR,cAC7C,wBAAMe,SAAS,eAAeF,QAASL,EAAIT,QAC3C,wBAAMgB,SAAS,WAAWF,QAASL,EAAIF,QAGvC,wBAAMQ,KAAK,eAAeD,QAASL,EAAIF,QACvC,wBAAMQ,KAAK,gBAAgBD,QAASL,EAAIT,QACxC,wBAAMe,KAAK,sBAAsBD,QAASL,EAAIR,cAC9C,wBAAMc,KAAK,gBAAgBD,QAASL,EAAIF,QACvCJ,EAGP,C,uHCJA,EA7BuB,SAAH,GAAmB,IAAbc,EAAK,EAALA,MACxB,OAAKA,GACAC,MAAMC,QAAQF,GAGjB,gBAAC,IAAS,KACR,sBAAIG,UCde,+CDehBH,EAAMI,KAAI,SAACC,GAAU,IAAD,EACnB,OACE,sBAAIC,IAAKD,EAAKE,MACZ,gBAAC,EAAAC,KAAI,CAACC,GAAE,SAAWJ,EAAKE,KAAQJ,UCjB5B,uCDkBF,gBAAC,EAAAO,EAAW,CAACC,IAAI,GAAGrB,MAAOe,EAAKO,UAAUC,cAC1C,sBAAIV,UCjBD,wCDiB2BE,EAAKtB,QAErC,4BACmB,QAAhB,EAAAsB,EAAKrB,mBAAW,aAAhB,EAAkB8B,OAAOC,EAAAA,EAAAA,GAAeV,EAAKrB,cAEhD,uBAAKmB,UCvBD,uCDwBF,yBAAOA,UAAU,QAAQE,EAAKW,aAC9B,gBAAC,IAAI,CAACC,KAAMZ,EAAKY,QAIzB,MAtBa,IA0BrB,C,oJE1BMC,EAAS,8DAeZ,OAfY,wBACbC,OAAA,WACE,IAAMnB,EAAQoB,IAAIC,KAAM,0CACjBC,EAAUF,IAAIC,KAAM,wCAAd,GAEb,OACE,gBAAC,IAAM,CAACE,SAAUF,KAAKG,MAAMD,UAC3B,gBAAC,IAAI,CACHjC,MAAOgC,EAAOV,UAAUC,YACxB9B,MAAOuC,EAAOxB,KACdD,QAASyB,EAAOG,WAElB,gBAAC,IAAc,CAACzB,MAAOA,IAG7B,EAAC,EAfY,CAAS0B,EAAAA,WAkBxB,YAEO,IAsCMC,EAAO,WAClB,OAAO,gBAAC,IAAG,CAAC1C,SAAU,KACxB,C","sources":["webpack://anzzawiki/./src/components/Seo/Seo.js","webpack://anzzawiki/./src/components/article-preview.js","webpack://anzzawiki/./src/components/article-preview.module.css","webpack://anzzawiki/./src/pages/index.js"],"sourcesContent":["import React from 'react';\nimport { useSiteMetadata } from '../../hooks/use-site-metadata';\n\n\nconst Seo = ({ title, description, pathname, children }) => {\n  \n  const { title: defaultTitle, description: defaultDescription, image, siteUrl, type, keywords } = useSiteMetadata()\n\n  const seo = {\n    // title: `${title} | ${defaultTitle}` || defaultTitle,\n    title: title ? `${title} | ${defaultTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}/${image}`,\n    url: `${siteUrl}${pathname || ``}`,\n    type: `${type}`,\n    keywords: `${keywords}`,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"keywords\" content={seo.keywords}/>\n\n      {/* Open Graph Protcol */}\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:type\" content={seo.type} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:site_name\" content={seo.title} />\n      <meta property=\"og:image\" content={seo.image} />\n\n      {/* Twitter Card Meta Tags */}\n      <meta name=\"twitter:card\" content={seo.image} />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;\n\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { renderRichText } from 'gatsby-source-contentful/rich-text'\n\nimport Container from './container'\nimport Tags from './tags'\nimport * as styles from './article-preview.module.css'\n\nconst ArticlePreview = ({ posts }) => {\n  if (!posts) return null\n  if (!Array.isArray(posts)) return null\n\n  return (\n    <Container>\n      <ul className={styles.articleList}>\n        {posts.map((post) => {\n          return (\n            <li key={post.slug}>\n              <Link to={`/blog/${post.slug}`} className={styles.link}>\n                <GatsbyImage alt=\"\" image={post.heroImage.gatsbyImage} />\n                <h2 className={styles.title}>{post.title}</h2>\n              </Link>\n              <div>\n                {post.description?.raw && renderRichText(post.description)}\n              </div>\n              <div className={styles.meta}>\n                <small className=\"meta\">{post.publishDate}</small>\n                <Tags tags={post.tags} />\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n    </Container>\n  )\n}\n\nexport default ArticlePreview\n","// extracted by mini-css-extract-plugin\nexport var articleList = \"article-preview-module--article-list--a632f\";\nexport var link = \"article-preview-module--link--1e0ea\";\nexport var meta = \"article-preview-module--meta--1cf85\";\nexport var title = \"article-preview-module--title--bc587\";","import React from 'react'\nimport { graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Layout from '../components/layout'\nimport Hero from '../components/hero'\nimport ArticlePreview from '../components/article-preview'\n\nimport Seo from '../components/Seo';\n\nclass RootIndex extends React.Component {\n  render() {\n    const posts = get(this, 'props.data.allContentfulBlogPost.nodes')\n    const [author] = get(this, 'props.data.allContentfulPerson.nodes')\n\n    return (\n      <Layout location={this.props.location}>\n        <Hero\n          image={author.heroImage.gatsbyImage}\n          title={author.name}\n          content={author.shortBio}\n        />\n        <ArticlePreview posts={posts} />\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    allContentfulBlogPost(sort: { publishDate: DESC }) {\n      nodes {\n        title\n        slug\n        publishDate(formatString: \"MMMM Do, YYYY\")\n        tags\n        heroImage {\n          gatsbyImage(\n            layout: FULL_WIDTH\n            placeholder: BLURRED\n            width: 424\n            height: 212\n          )\n        }\n        description {\n          raw\n        }\n      }\n    }\n    allContentfulPerson(\n      filter: { contentful_id: { eq: \"15jwOBqpxqSAOy2eOO4S0m\" } }\n    ) {\n      nodes {\n        name\n        shortBio {\n          raw\n        }\n        title\n        heroImage: image {\n          gatsbyImage(layout: CONSTRAINED, placeholder: BLURRED, width: 1180)\n        }\n      }\n    }\n  }\n`\n\nexport const Head = () => {\n  return <Seo pathname={'/'} />\n}"],"names":["title","description","pathname","children","useSiteMetadata","defaultTitle","defaultDescription","image","siteUrl","seo","url","type","keywords","httpEquiv","content","name","property","posts","Array","isArray","className","map","post","key","slug","Link","to","G","alt","heroImage","gatsbyImage","raw","renderRichText","publishDate","tags","RootIndex","render","get","this","author","location","props","shortBio","React","Head"],"sourceRoot":""}